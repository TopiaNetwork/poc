// Creation of Web3 class
const Web3 = require("web3");

// Setting up a HttpProvider
web3 = new Web3(new Web3.providers.HttpProvider("http://127.0.0.1:8545"));

let abiCode = [{"inputs":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"value","type":"string"}],"name":"topia_create","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"key","type":"string"}],"name":"topia_delete","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"contractAddr","type":"address"},{"internalType":"string","name":"key","type":"string"}],"name":"topia_query","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"value","type":"string"}],"name":"topia_update","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}];

let binCode = "608060405234801561001057600080fd5b506107e1806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634f29b4c2146100515780637f085c2814610081578063c330149d146100b1578063e92419ff146100e1575b600080fd5b61006b60048036038101906100669190610452565b610111565b60405161007891906104e3565b60405180910390f35b61009b60048036038101906100969190610588565b610125565b6040516100a89190610676565b60405180910390f35b6100cb60048036038101906100c69190610698565b61013b565b6040516100d891906104e3565b60405180910390f35b6100fb60048036038101906100f69190610452565b61014d565b60405161010891906104e3565b60405180910390f35b600061011d8383610161565b905092915050565b6060610132848484610193565b90509392505050565b6000610146826101de565b9050919050565b600061015983836101fe565b905092915050565b600080600080600080602088019450875193506020870192508651915081838587219050809550505050505092915050565b606060008060008060008060208801955087519450604051915084868a8c259050808286888c8e22935093508282016040526101cf8484610230565b96505050505050509392505050565b600080600080602085019250845191508183239050809350505050919050565b600080600080600080602088019450875193506020870192508651915081838587249050809550505050505092915050565b606060008267ffffffffffffffff81111561024e5761024d610327565b5b6040519080825280601f01601f1916602001820160405280156102805781602001600182028036833780820191505090505b50905060005b838110156102ed576000818601519050808383815181106102aa576102a96106e1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505080806102e59061073f565b915050610286565b508091505092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61035f82610316565b810181811067ffffffffffffffff8211171561037e5761037d610327565b5b80604052505050565b60006103916102f8565b905061039d8282610356565b919050565b600067ffffffffffffffff8211156103bd576103bc610327565b5b6103c682610316565b9050602081019050919050565b82818337600083830152505050565b60006103f56103f0846103a2565b610387565b90508281526020810184848401111561041157610410610311565b5b61041c8482856103d3565b509392505050565b600082601f8301126104395761043861030c565b5b81356104498482602086016103e2565b91505092915050565b6000806040838503121561046957610468610302565b5b600083013567ffffffffffffffff81111561048757610486610307565b5b61049385828601610424565b925050602083013567ffffffffffffffff8111156104b4576104b3610307565b5b6104c085828601610424565b9150509250929050565b6000819050919050565b6104dd816104ca565b82525050565b60006020820190506104f860008301846104d4565b92915050565b610507816104ca565b811461051257600080fd5b50565b600081359050610524816104fe565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105558261052a565b9050919050565b6105658161054a565b811461057057600080fd5b50565b6000813590506105828161055c565b92915050565b6000806000606084860312156105a1576105a0610302565b5b60006105af86828701610515565b93505060206105c086828701610573565b925050604084013567ffffffffffffffff8111156105e1576105e0610307565b5b6105ed86828701610424565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015610631578082015181840152602081019050610616565b60008484015250505050565b6000610648826105f7565b6106528185610602565b9350610662818560208601610613565b61066b81610316565b840191505092915050565b60006020820190508181036000830152610690818461063d565b905092915050565b6000602082840312156106ae576106ad610302565b5b600082013567ffffffffffffffff8111156106cc576106cb610307565b5b6106d884828501610424565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061074a826104ca565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361077c5761077b610710565b5b60018201905091905056fea26469706673582212206db73d0370272c836c0c9a4e5b1fd0ee19646878400cb0e0eef2c0201ca7acc664736f6c637826302e382e32302d63692e323032332e352e392b636f6d6d69742e37346165636166612e6d6f640057";

contract = new web3.eth.Contract(abiCode);

// let val = new Array(10).fill("a").join("");

let key = "myKey";
let val = "myValue";

web3.eth.getAccounts().then((accounts) => {
    // Display all Ganache Accounts
    console.log("Accounts:", accounts);

    let mainAccount = accounts[0];
    // web3.eth.personal.unlockAccount(mainAccount, "123", 36000).
    //     then(console.log("Account unlocked!"));

    // address that will deploy smart contract
    console.log("Default Account:", mainAccount);
    contract
        .deploy({ data: binCode })
        .send({ from: mainAccount, gas: 500000 })
        .on("receipt", (receipt) => {

            // Contract Address will be returned here
            console.log("Contract Address:", receipt.contractAddress);
        })
        .then(async (myContract) => {
            let contractAddr = myContract.options.address;
            let chainId = 66666;
            let res = await myContract.methods.topia_create(
                key, val).send({from: mainAccount});
            console.log(res);
            res = await myContract.methods.topia_query(
                chainId,
                contractAddr,
                key).call();
            console.log("query after create:", res);
            let newVal = new Array(10000).fill("a").join("");
            res = await myContract.methods.topia_update(
                key, newVal).send({from: mainAccount});
            console.log(res);
            res = await myContract.methods.topia_query(
                chainId,
                contractAddr,
                key).call();
            console.log("query after update:", res);
            res = await myContract.methods.topia_delete(
                key).send({from: mainAccount});
            console.log(res);
        });
});